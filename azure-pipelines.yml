name: $(Build.BuildID)-$(Build.SourceBranchName)
variables:
  Major: 0
  Minor: 0
  Patch: $(Build.BuildID)
trigger:
  branches:
    include:
      - dev
      - master
      - preview/*
      - releases/*
pr:
  autoCancel: false
  branches:
    include:
      - dev
      - master
      - preview/*
      - releases/*
jobs:
- job: build
  pool:
    name: 'Hosted VS2017'  # name of the pool to run this job in
    demands: 
      - msbuild
      - visualstudio
      - vstest
  steps:
  - checkout: self  
    clean: false
    submodules: true  # set to 'true' for a single level of submodules or 'recursive' to get submodules of submodules

  - task: NodeTool@0
    inputs:
      versionSpec: 8.15.0

  - task: NuGetToolInstaller@0
    displayName: 'Install Nuget tool'

  - task: PowerShell@2
    displayName: 'PowerShell Script build.ps1'
    inputs:
      targetType: filePath
      filePath: ./build.ps1
      arguments: '--env=wac --pack --version=0.1.$(Build.BuildNumber) --output-hashing ALL'

  - task: NuGetCommand@2
    displayName: 'NuGet push'
    condition: or(eq(variables['Build.SourceBranch'], 'refs/heads/dev'), eq(variables['Build.SourceBranch'], 'refs/heads/master'), startsWith(variables['Build.SourceBranch'], 'refs/heads/releases'), startsWith(variables['Build.SourceBranch'], 'refs/heads/preview'))
    inputs:
      command: push
      packagesToPush: '$(Build.SourcesDirectory)/**/*.nupkg;!$(Build.SourcesDirectory)/**/*.symbols.nupkg'
      nuGetFeedType: external
      publishFeedCredentials: 'IIS-WAC-MyGet'
      versioningScheme: byBuildNumber
      majorVersion: '$(Major)'
      minorVersion: '$(Minor)'
      patchVersion: '$(Patch)'
      allowPackageConflicts: false
